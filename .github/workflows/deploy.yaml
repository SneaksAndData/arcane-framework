name: Deploy to AKS
run-name: Deploy ${{github.ref_name}} to ${{ inputs.environment }} by @${{ github.actor }}

permissions:
  pull-requests: write
  contents: read
  
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment target
        required: true
        type: environment
        default: test
# ! Replace DotnetProject and dotnet-project with project name in real repository
env:
  PROJECT_NAME: DotnetProject
  PROJECT_NAME_LOWER: dotnet-project
  
jobs:
  deploy:
    name: Deploy 
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
      id-token: write
    # Remove the line below and uncomment the next one
    if: ${{ false }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags') && always() }}
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v4
        if: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')) && always() }}
        with:
          fetch-depth: 0
      - uses: azure/setup-helm@v4
        with:
          version: '3.9.2'
        id: install_helm
      - name: Import Secrets
        uses: hashicorp/vault-action@v2.7.4
        with:
          url: https://hashicorp-vault.production.sneaksanddata.com/
          role: github
          method: jwt
          secrets: |
            /secret/data/applications/${{ env.PROJECT_NAME_LOWER }}/${{github.event.inputs.environment}}/build acr_user  ;
            /secret/data/applications/${{ env.PROJECT_NAME_LOWER }}/${{github.event.inputs.environment}}/build acr_name  ;
            /secret/data/applications/${{ env.PROJECT_NAME_LOWER }}/${{github.event.inputs.environment}}/build aks_name ;
            /secret/data/applications/${{ env.PROJECT_NAME_LOWER }}/${{github.event.inputs.environment}}/build cluster_sp_client_id ;
            /secret/data/applications/${{ env.PROJECT_NAME_LOWER }}/${{github.event.inputs.environment}}/build cluster_sp_client_password ;
            /secret/data/applications/${{ env.PROJECT_NAME_LOWER }}/${{github.event.inputs.environment}}/build acr_token ;
      - name: Deployment
        working-directory: .helm
        env:
          DEPLOY_ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          set -e
          echo 'Getting cluster credentials'
          az login --service-principal --username $CLUSTER_SP_CLIENT_ID --password $CLUSTER_SP_CLIENT_PASSWORD --tenant 06152121-b4c5-4544-abf5-9268e75db448
          az aks get-credentials --name $AKS_NAME --resource-group $AKS_NAME
          chart_version=$(git describe --tags --abbrev=7)

          echo 'Logging to ACR'
          helm registry login $ACR_NAME.azurecr.io --username $ACR_NAME --password $ACR_TOKEN

          echo 'Installing chart'
          helm pull oci://$ACR_NAME.azurecr.io/helm/$PROJECT_NAME_LOWER --version $chart_version 
          mkdir -p ./$PROJECT_NAME_LOWER
          tar xzf "$PROJECT_NAME_LOWER-${chart_version}.tgz" -C ./$PROJECT_NAME_LOWER

          helm upgrade --install $PROJECT_NAME_LOWER -n $PROJECT_NAME_LOWER --values ./values.yaml \
                    --set environment=${DEPLOY_ENVIRONMENT^} \
                    --set image.repository=$ACR_NAME.azurecr.io/$PROJECT_NAME_LOWER \
                    --set image.tag=$chart_version \
                    --set secretStorage.deploymentClusterName=$AKS_NAME \
                     ./$PROJECT_NAME_LOWER/$PROJECT_NAME_LOWER
